// Copyright (c) BruTile developers team. All rights reserved. See License.txt in the project root for license information.

namespace BruTile.Tms;

// 
// This source code was auto-generated by xsd, Version=2.0.50727.3038.
// 

#nullable disable

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]

[System.Diagnostics.DebuggerStepThroughAttribute()]

[System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
[System.Xml.Serialization.XmlRootAttribute(Namespace = "", IsNullable = false)]

public partial class TileMap
{

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string Title { get; set; }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string Abstract { get; set; }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute(Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public string SRS { get; set; }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("BoundingBox", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public TileMapBoundingBox BoundingBox { get; set; }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("Origin", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public TileMapOrigin Origin { get; set; }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("TileFormat", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public TileMapTileFormat TileFormat { get; set; }

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("TileSets", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public TileMapTileSets TileSets { get; set; }

    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string version { get; set; }

    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string tilemapservice { get; set; }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]

[System.Diagnostics.DebuggerStepThroughAttribute()]

[System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
public partial class TileMapBoundingBox
{

    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string minx { get; set; }

    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string miny { get; set; }

    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string maxx { get; set; }

    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string maxy { get; set; }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]

[System.Diagnostics.DebuggerStepThroughAttribute()]

[System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
public partial class TileMapOrigin
{

    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string x { get; set; }

    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string y { get; set; }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]

[System.Diagnostics.DebuggerStepThroughAttribute()]

[System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
public partial class TileMapTileFormat
{

    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string width { get; set; }

    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string height { get; set; }

    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("mime-type")]
    public string mimetype { get; set; }

    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string extension { get; set; }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]

[System.Diagnostics.DebuggerStepThroughAttribute()]

[System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
public partial class TileMapTileSets
{

    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("TileSet", Form = System.Xml.Schema.XmlSchemaForm.Unqualified)]
    public TileMapTileSetsTileSet[] TileSet { get; set; }

    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string profile { get; set; }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]

[System.Diagnostics.DebuggerStepThroughAttribute()]

[System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
public partial class TileMapTileSetsTileSet
{
    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string href { get; set; }

    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute("units-per-pixel")]
    public string unitsperpixel { get; set; }

    /// <remarks/>
    [System.Xml.Serialization.XmlAttributeAttribute()]
    public string order { get; set; }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("xsd", "2.0.50727.3038")]

[System.Diagnostics.DebuggerStepThroughAttribute()]

[System.Xml.Serialization.XmlTypeAttribute(AnonymousType = true)]
[System.Xml.Serialization.XmlRootAttribute(Namespace = "", IsNullable = false)]
public partial class NewDataSet
{
    /// <remarks/>
    [System.Xml.Serialization.XmlElementAttribute("TileMap")]
    public TileMap[] Items { get; set; }
}
