name: Release Nugets

on:
  workflow_dispatch:
    inputs:
      release_nuget:
        description: 'release to nuget.org'
        required: true
        type: boolean 

jobs:
  build:

    env:
      SOLUTION: 'BruTile.sln'

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Setup NuGet
      uses: NuGet/setup-nuget@v1.0.5

      # The version tag needs to be set before the release. If not if will fail on nuget publish.
    - name: Set VERSION_OF_RELEASE to last tag
      run: |
        echo ("VERSION_OF_RELEASE=" + $(git describe --tags --abbrev=0)) >> $env:GITHUB_ENV
        echo $VERSION_OF_RELEASE

    - name: Restore dependencies
      run: nuget restore $SOLUTION

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.402

    - name: Build
      # The nupkgs will be built because the projects have GeneratePackageOnBuild set to true. 
      # The dlls and nupkgs will be built 'inputs.release_version' as version, overriding the version number in the Directory.Build.props.
      run: dotnet build $SOLUTION --configuration Release -p:Version=${{ env.VERSION_OF_RELEASE }} --no-restore /p:PackageOutputPath="${GITHUB_WORKSPACE}/nugets"

    - name: Test
      run: dotnet test $SOLUTION --configuration Release --no-restore --verbosity normal -p:Version=${{ env.VERSION_OF_RELEASE }}
    
    - name: Publish
      if: ${{ inputs.release_nuget }} 
      run: |
        nuget push "${GITHUB_WORKSPACE}\nugets\**\*.nupkg" -Source 'https://api.nuget.org/v3/index.json' -ApiKey ${{secrets.NUGET_APIKEY}}